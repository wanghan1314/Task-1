<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"

       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

    <!--自动扫描包，实现支持注解的IOC-->

    <context:component-scan base-package="com.xiaobo.demo" />
    <!--接收RMI-->
    <bean id="commonService2" class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
        <property name="serviceUrl" value="rmi://182.61.19.92:1192/CommonService"></property>
        <property name="serviceInterface" value="com.xiaobo.demo.service.CommonService"></property>
        
    </bean>
    <bean id="EmailCodeService2" class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
        <property name="serviceUrl" value="rmi://182.61.19.92:1192/EmailCodeService"></property>
        <property name="serviceInterface" value="com.xiaobo.demo.service.EmailCodeService"></property>
    </bean>
    <bean id="ExcellentStudentService2" class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
        <property name="serviceUrl" value="rmi://182.61.19.92:1192/ExcellentStudentService"></property>
        <property name="serviceInterface" value="com.xiaobo.demo.service.ExcellentStudentService"></property>
    </bean>
    <bean id="PhoneCodeService2" class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
        <property name="serviceUrl" value="rmi://182.61.19.92:1192/PhoneCodeService"></property>
        <property name="serviceInterface" value="com.xiaobo.demo.service.PhoneCodeService"></property>
    </bean>
    <bean id="ProfessionService2" class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
        <property name="serviceUrl" value="rmi://182.61.19.92:1192/ProfessionService"></property>
        <property name="serviceInterface" value="com.xiaobo.demo.service.ProfessionService"></property>
    </bean>
    <bean id="UserService2" class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
        <property name="serviceUrl" value="rmi://182.61.19.92:1192/UserService"></property>
        <property name="serviceInterface" value="com.xiaobo.demo.service.UserService"></property>
    </bean>
    <!--接收RMI-->
    <bean id="commonService1" class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
        <property name="serviceUrl" value="rmi://182.61.19.92:1191/CommonService"></property>
        <property name="serviceInterface" value="com.xiaobo.demo.service.CommonService"></property>
        
    </bean>
    <bean id="EmailCodeService1" class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
        <property name="serviceUrl" value="rmi://182.61.19.92:1191/EmailCodeService"></property>
        <property name="serviceInterface" value="com.xiaobo.demo.service.EmailCodeService"></property>
        
    </bean>
    <bean id="ExcellentStudentService1" class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
        <property name="serviceUrl" value="rmi://182.61.19.92:1191/ExcellentStudentService"></property>
        <property name="serviceInterface" value="com.xiaobo.demo.service.ExcellentStudentService"></property>
        
    </bean>
    <bean id="PhoneCodeService1" class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
        <property name="serviceUrl" value="rmi://182.61.19.92:1191/PhoneCodeService"></property>
        <property name="serviceInterface" value="com.xiaobo.demo.service.PhoneCodeService"></property>
        
    </bean>
    <bean id="ProfessionService1" class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
        <property name="serviceUrl" value="rmi://182.61.19.92:1191/ProfessionService"></property>
        <property name="serviceInterface" value="com.xiaobo.demo.service.ProfessionService"></property>
        
    </bean>
    <bean id="UserService1" class="org.springframework.remoting.rmi.RmiProxyFactoryBean">
        <property name="serviceUrl" value="rmi://182.61.19.92:1191/UserService"></property>
        <property name="serviceInterface" value="com.xiaobo.demo.service.UserService"></property>

    </bean>
    <context:annotation-config/>
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
                <value>classpath:redis.properties</value>
                <value>classpath:memcached.properties</value>
            </list>
        </property>
    </bean>

    <!--<import resource="redis.xml"/>-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"></property>
        <property name="jdbcUrl" value="${jdbc.url}"></property>
        <property name="user" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <property name="testConnectionOnCheckout" value="${jdbc.c3p0.testConnectionOnCheckout}"></property>
        <property name="testConnectionOnCheckin" value="${jdbc.c3p0.testConnectionOnCheckin}"></property>
        <property name="idleConnectionTestPeriod" value="${jdbc.c3p0.idleConnectionTestPeriod}"></property>
        <property name="initialPoolSize" value="${jdbc.c3p0.initialPoolSize}"></property>
        <property name="minPoolSize" value="${jdbc.c3p0.minPoolSize}"></property>
        <property name="maxPoolSize" value="${jdbc.c3p0.maxPoolSize}"></property>
        <property name="maxIdleTime" value="${jdbc.c3p0.maxIdleTime}"></property>
    </bean>
    <!-- 配置SqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 指定数据源 -->
        <property name="dataSource" ref="dataSource"></property>
        <!-- 指定Mybatis配置文件的路径 -->
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
        <property name="mapperLocations" value="classpath:com/xiaobo/demo/mapper/*.xml"></property>
    </bean>
    <!-- 配置mapper的扫描包 -->
    <!-- 去扫描bean的时候，有一个取名字的规则：bean的名字=原先类的类名小写，这个是为了做测试的时候看看spring和Mybatis有没有整合成功的时候需要使用到 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.xiaobo.demo.dao"></property>
    </bean>

    <!--开启基于注解的事务，使用xml配置形式的事务（必要主要的都是使用配置式）  -->
</beans>