send_api = http://api.sendcloud.net/apiv2/mail/send
send_template_api = http://api.sendcloud.net/apiv2/mail/sendtemplate
send_sms_api = http://www.sendcloud.net/smsapi/send
send_voice_api = http://www.sendcloud.net/smsapi/sendVoice
api_user =  
api_key = 
sms_user =
sms_key =


jdbc.url=jdbc:mysql://localhost:3306/ptteng_crm?characterEncoding=UTF-8

jdbc.driverClassName=com.mysql.jdbc.Driver

jdbc.username=root

jdbc.password=

jdbc.filters=stat

jdbc.maxActive=20

jdbc.initialSize=1

jdbc.maxWait=60000

jdbc.minIdle=10

jdbc.maxIdle=15

#建议是设置的比mysql的wait_timeout小，尝试28000(原来是60000)
jdbc.timeBetweenEvictionRunsMillis=28000

jdbc.minEvictableIdleTimeMillis=300000

jdbc.validationQuery=SELECT 'x'

jdbc.testWhileIdle=true

jdbc.testOnBorrow=false

jdbc.testOnReturn=false

jdbc.maxOpenPreparedStatements=20

jdbc.removeAbandoned=true

jdbc.removeAbandonedTimeout=1800

jdbc.logAbandoned=true



#连接池大小即客户端个数
xmemcached.connectionPoolSize=50
xmemcached.failureMode=true
#server1
xmemcached.server1.host=127.0.0.1
xmemcached.server1.port=11211
xmemcached.server1.weight=4



#ip地址
redis.hostName=127.0.0.1
#端口号
redis.port=6379
#如果有密码
redis.password=
#客户端超时时间单位是毫秒 默认是2000
redis.timeout=10000


#最大空闲数
redis.maxIdle=300
#连接池的最大数据库连接数。设为0表示无限制,如果是jedis 2.4以后用redis.maxTotal
#redis.maxActive=600
#控制一个pool可分配多少个jedis实例,用来替换上面的redis.maxActive,如果是jedis 2.4以后用该属性
redis.maxTotal=1000
#最大建立连接等待时间。如果超过此时间将接到异常。设为-1表示无限制。
redis.maxWaitMillis=1000
#连接的最小空闲时间 默认1800000毫秒(30分钟)
redis.minEvictableIdleTimeMillis=300000
#每次释放连接的最大数目,默认3
redis.numTestsPerEvictionRun=1024
#逐出扫描的时间间隔(毫秒) 如果为负数,则不运行逐出线程, 默认-1
redis.timeBetweenEvictionRunsMillis=30000
#是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个
redis.testOnBorrow=true
#在空闲时检查有效性, 默认false
redis.testWhileIdle=true