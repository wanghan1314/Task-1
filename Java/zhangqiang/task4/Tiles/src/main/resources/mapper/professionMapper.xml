<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tiles.dao.mapper.ProfessionMapper">

    <resultMap id="professionMapper" type="com.tiles.model.Profession">
        <id column="id" property="id"/>
        <result column="create_at"  property="create_at"/>
        <result column="update_at"  property="update_at"/>
        <result column="proName" property="proName"/>
        <result column="proPresentation"  property="proPresentation"/>
        <result column="difficulty"  property="difficulty"/>
        <result column="level"  property="level"/>
        <result column="cycle"  property="cycle"/>
        <result column="scarcity" property="scarcity"/>
        <result column="emolument_min" property="emolument_min"/>
        <result column="emolument_max" property="emolument_max"/>
        <result column="direction" property="direction"/>
        <result column="remind" property="remind"/>
        <result column="proPhoto" property="proPhoto"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,proName,proPresentation,difficulty,level,cycle,scarcity,emolument_min,emolument_max,direction,remind,create_at,update_at,proPhoto
    </sql>

    <!--parameterType	将会传入这条语句的参数类的完全限定名或别名。这个属性是可选的，因为 MyBatis 可以通过 TypeHandler 推断出具体传入语句的参数，默认值为 unset。-->
    <!--resultType	从这条语句中返回的期望类型的类的完全限定名或别名。注意如果是集合情形，那应该是集合可以包含的类型，而不能是集合本身。使用 resultType 或 resultMap，但不能同时使用。-->
    <!--resultMap	外部 resultMap 的命名引用。结果集的映射是 MyBatis 最强大的特性，对其有一个很好的理解的话，许多复杂映射的情形都能迎刃而解。使用 resultMap 或 resultType，但不能同时使用。-->
    <!--statementType	STATEMENT，PREPARED 或 CALLABLE 的一个。这会让 MyBatis 分别使用 Statement，PreparedStatement 或 CallableStatement，默认值：PREPARED。-->

    <select id="findAllCount"  resultType="int">
        SELECT COUNT(*) FROM jnshu_profession
    </select>

    <select id="findByPage"  parameterType="Map" resultMap="professionMapper">
        SELECT
        <include refid="Base_Column_List"/>
        FROM jnshu_profession
        <if test="start!=null and size!=null">
            limit #{start} ,#{size}
        </if>
    </select>

    <select id="findAll" parameterType="com.tiles.model.Profession" resultMap="professionMapper" >
        SELECT * FROM jnshu_profession
    </select>


    <!--&lt;!&ndash;插入单条数据&ndash;&gt;-->
    <!--<insert id="insertOne" parameterType="com.tiles.model.Profession" useGeneratedKeys="true" keyColumn="id" keyProperty="id" >-->
        <!--INSERT INTO jnshu_profession-->
        <!--(stuName,stuPhoto,sex,age,school,office,recommend,pro_id)-->
        <!--values-->
        <!--(#{stuName,jdbcType=VARCHAR},-->
        <!--#{stuPhoto,jdbcType=VARCHAR},-->
        <!--#{sex,jdbcType=INTEGER},-->
        <!--#{age,jdbcType=INTEGER},-->
        <!--#{school,jdbcType=VARCHAR},-->
        <!--#{office,jdbcType=VARCHAR},-->
        <!--#{recommend,jdbcType=VARCHAR},-->
        <!--#{pro_id,jdbcType=BIGINT})-->
        <!--<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">-->
            <!--select @@IDENTITY AS ID-->
        <!--</selectKey>-->
    <!--</insert>-->

</mapper>