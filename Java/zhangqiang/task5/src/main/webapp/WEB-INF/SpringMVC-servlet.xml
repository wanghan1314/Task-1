<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="com.opt.controller"/>
    <context:annotation-config/>
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <!--SpringMVC 拦截器 多个拦截器顺序执行-->
    <mvc:annotation-driven/>
    <mvc:default-servlet-handler/>
    <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
    <mvc:interceptors>
        <mvc:interceptor>
            <!--匹配url路径-->
            <mvc:mapping path="/u/**"/>
            <bean class="com.opt.controller.LoginInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <bean id="optController" class="com.opt.controller.OptController"/>


    <!--Tiler框架配置-->
    <bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <property name="definitions">
            <list>
                <value>/WEB-INF/config/tiles-layout.xml</value>
            </list>
        </property>
    </bean>
    <!-- tiles解析器 p:order="1"表示优先级，数字越小，解析器的优先级越高-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver" p:order="1">
        <property name="viewClass">
            <value>
                org.springframework.web.servlet.view.tiles3.TilesView
            </value>
        </property>
    </bean>





</beans>