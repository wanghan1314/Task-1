<?xml version="1.0" encoding="UTF-8"?>

<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
         http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="WebApp_ID" version="2.5">
    <filter>
        <filter-name>characterEncoding</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>characterEncoding</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!--配置rest风格过滤器-->
    <filter>
        <filter-name>HiddenHttpMethodFilter</filter-name>
        <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
        <init-param>
            <param-name>methodParam</param-name>
            <param-value>_method</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>HiddenHttpMethodFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


    <!-- spring的配置文件-->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:applicationContext.xml</param-value>
    </context-param>
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <!--配置前端分配器-->
    <servlet>
        <servlet-name>springmvc</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!-- 如果要使用默认加载方式,满足以下2个条件:
               默认加载必须规范：
               * 文件命名：servlet-name-servlet.xml====springmvc.xml
               * 路径规范：必须在WEB-INF目录下面
               就可以不用写<init-param></init-param>
         -->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:springMVC.xml</param-value>
        </init-param>
        <!--服务器启动就一起初始化,数值越小,优先级越高
            服务器启动的时候就加载bean类
        -->
        <load-on-startup>1</load-on-startup>
    </servlet>

<!--    <servlet>
        <servlet-name>resin-file</servlet-name>
        <servlet-class>com.caucho.servlets.FileServlet</servlet-class>
    </servlet>-->

    <servlet-mapping>
        <servlet-name>springmvc</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <!--不建议以下的处理方式-->

    <!--把静态资源交给tomcat的defaultSerlvet处理（不建议）-->
<!--        <servlet-mapping>
            <servlet-name>default</servlet-name>
            <url-pattern>*.html</url-pattern>
            <url-pattern>*.js</url-pattern>
            <url-pattern>*.css</url-pattern>
            <url-pattern>*.png</url-pattern>
        </servlet-mapping>-->

    <!--resin配置（不建议）-->
<!--    <servlet-mapping>
        <servlet-name>resin-file</servlet-name>
        <url-pattern>*.css</url-pattern>
        <url-pattern>*.png</url-pattern>
        <url-pattern>*.jpg</url-pattern>
        <url-pattern>*.js</url-pattern>
    </servlet-mapping>-->

    <!--欢迎页面（不建议）-->
<!--    <welcome-file-list>
        <welcome-file>WEB-INF/jsp/welcome.jsp</welcome-file>
    </welcome-file-list>-->

    <!--错误页面（不建议）-->
<!--    <error-page>
        <exception-type>javax.servlet.ServletException</exception-type>
        <location>/WEB-INF/jsp/error.jsp</location>
    </error-page>-->

</web-app>