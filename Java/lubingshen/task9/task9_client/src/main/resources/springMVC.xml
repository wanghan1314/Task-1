<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">


    <context:annotation-config/>

    <!--配合下面那个 mvc:annotation-driven 一起使用-->
    <context:component-scan base-package="com.ptteng.controller">
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--拦截器-->
    <mvc:interceptors>
        <!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->
        <mvc:interceptor>
            <mvc:mapping path="/a/u/**"/>
            <!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 -->
            <bean class="com.ptteng.manager.Interceptor"/>
        </mvc:interceptor>
<!--        4.0以后新特性,可以设置不拦截的
        <mvc:interceptor>
        <mvc:mapping path="/a/u/**" />
        <mvc:exclude-mapping path="/a/u/other/**" />&lt;!&ndash;
        不匹配的 &ndash;&gt;
        <bean class="com.ptteng.manager.LoginManager" />
        </mvc:interceptor>-->
    </mvc:interceptors>

    <!--处理@RequestMapping注解的-->
    <!--将controller类的名字映射为请求url。-->
    <!--确定调用哪个controller的哪个方法来处理当前请求-->
    <!--添加异常处理器-->
    <mvc:annotation-driven/>

    <!--也可以采用<mvc:resources />   因为前端控制器设置了全捕获，为了处理REST风格的接口，需要额外配置-->
    <mvc:default-servlet-handler/>

    <!--注册异常处理器-->
    <bean class="com.ptteng.manager.ExceptionResolver"/>

    <!--jsp解析器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass"
                  value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/view/jnshu/jsp/"/>  <!--前缀-->
        <property name="suffix" value=".jsp"/>            <!--后缀-->
        <!--这样子就能简写路径了-->
        <property name="order" value="20"/>
    </bean>

    <!--tiles框架配置-->
    <bean id="tilesViewResolver"
            class="org.springframework.web.servlet.view.tiles3.TilesViewResolver">
        <property name="order" value="10"/>
<!--        <property name="prefix" value="/view/jnshu/"/>-->
    </bean>
    <bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <property name="definitions">
            <list>
                <value>/WEB-INF/tiles.xml</value>
            </list>
        </property>
    </bean>

    <!--定义文件上传解析器-->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 设定默认编码 -->
        <property name="defaultEncoding" value="UTF-8" />
        <!-- 设定文件上传的最大值5MB，5*1024*1024 -->
        <property name="maxUploadSize" value="5242880" />
        <property name="maxInMemorySize" value="4096" />
    </bean>

</beans>