<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

<!--    <context:component-scan base-package="com.ptteng">
        &lt;!&ndash;不扫描 @Controller注解的类  &ndash;&gt;
        <context:exclude-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>-->

    <context:component-scan base-package="com.ptteng.service"/>
    <context:component-scan base-package="com.ptteng.manager"/>
    <context:component-scan base-package="com.ptteng.rmi"/>

    <context:property-placeholder location="classpath:redis.properties" ignore-unresolvable="true"/>

    <!-- redis连接池 -->
    <bean id="jedisConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.maxActive}"/>
        <property name="maxIdle" value="${redis.maxIdle}"/>
        <property name="maxWaitMillis" value="${redis.maxWait}"/>
        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>
    </bean>
    <!-- redis连接工厂 -->
    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.host}"/>
        <property name="port" value="${redis.port}"/>
        <!--<property name="password" value="${redis.password}"/>-->
        <property name="poolConfig" ref="jedisConfig"/>
    </bean>
    <!-- redis操作模板，这里采用尽量面向对象的模板 -->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="connectionFactory"/>
        <!--     如果不配置Serializer，那么存储的时候只能使用String，如果用对象类型存储，那么会提示错误 can't cast to String！！！-->
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
        </property>
        <property name="hashKeySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="hashValueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
        </property>
        <!--开启事务-->
        <property name="enableTransactionSupport" value="true"/>
    </bean>
    <!--使用实例工厂方式装载hashOperationss对象-->
    <bean id="hashOperations" factory-bean="redisTemplate" factory-method="opsForHash"/>

    <bean class="org.springframework.remoting.rmi.RmiProxyFactoryBean" id="homeRMIServerA">
        <property name="serviceInterface" value="com.ptteng.service.HomeService"/>
        <property name="serviceUrl" value="rmi://39.106.59.18:8090/homeRMIServer"/>
    </bean>

    <bean class="org.springframework.remoting.rmi.RmiProxyFactoryBean" id="loginRMIServerA">
        <property name="serviceInterface" value="com.ptteng.service.LoginService"/>
        <property name="serviceUrl" value="rmi://39.106.59.18:8090/loginRMIServer"/>
    </bean>

    <bean class="org.springframework.remoting.rmi.RmiProxyFactoryBean" id="studentRMIServerA">
        <property name="serviceInterface" value="com.ptteng.service.StudentService"/>
        <property name="serviceUrl" value="rmi://39.106.59.18:8090/studentRMIServer"/>
    </bean>

    <bean class="org.springframework.remoting.rmi.RmiProxyFactoryBean" id="homeRMIServerB">
        <property name="serviceInterface" value="com.ptteng.service.HomeService"/>
        <property name="serviceUrl" value="rmi://39.106.59.18:8091/homeRMIServer"/>
    </bean>

    <bean class="org.springframework.remoting.rmi.RmiProxyFactoryBean" id="loginRMIServerB">
        <property name="serviceInterface" value="com.ptteng.service.LoginService"/>
        <property name="serviceUrl" value="rmi://39.106.59.18:8091/loginRMIServer"/>
    </bean>

    <bean class="org.springframework.remoting.rmi.RmiProxyFactoryBean" id="studentRMIServerB">
        <property name="serviceInterface" value="com.ptteng.service.StudentService"/>
        <property name="serviceUrl" value="rmi://39.106.59.18:8091/studentRMIServer"/>
    </bean>

</beans>
