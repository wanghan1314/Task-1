##########################  数据库设置   ##########################

##此处配置和SSM框架参数不同，需要注意。springboot有默认使用的驱动版本
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/task4?useUnicode=true&\
  characterEncoding=UTF8&useSSL=false&serverTimezone=Hongkong
spring.datasource.username=root
spring.datasource.password=$Root123456


#------------------------------------------------------------------

##########################  druid配置   ###########################

# 初始化大小，最小，最大
spring.datasource.druid.initial-size=5
spring.datasource.druid.min-idle=1
spring.datasource.druid.max-active=10
# 配置获取连接等待超时的时间
spring.datasource.druid.max-wait=60000

# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.min-evictable-idle-time-millis=300000
#spring.datasource.druid.max-evictable-idle-time-millis=

#用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。
# 如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
spring.datasource.druid.validation-query=SELECT 1 FROM DUAL
#spring.datasource.druid.validation-query-timeout=#默认超时为1分钟

#建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测；
# 如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.druid.test-while-idle=true
#申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
spring.datasource.druid.test-on-borrow=false
#归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
spring.datasource.druid.test-on-return=false

# 打开PSCache，并且指定每个连接上PSCache的大小，oracle建议开启，mysql建议关闭
spring.datasource.druid.pool-prepared-statements=false
#spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
#spring.datasource.druid.max-open-prepared-statements= #和上面的等价

# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.druid.filters=stat,wall,log4j2

# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true

# 配置日志输出
spring.datasource.druid.filter.slf4j.enabled=true
spring.datasource.druid.filter.slf4j.statement-create-after-log-enabled=false
spring.datasource.druid.filter.slf4j.statement-close-after-log-enabled=false
spring.datasource.druid.filter.slf4j.result-set-open-after-log-enabled=false
spring.datasource.druid.filter.slf4j.result-set-close-after-log-enabled=false

#------------------------------------------------------------------

##########################  Mybatis扫描xml文件配置   ###########################

##不管注解还是xml用法，此处配置的是模型类所在包
mybatis.type-aliases-package=com.example.myCompany.model

##关于xml配置的用法
mybatis.config-location=classpath:mybatis/mybatis-config.xml
mybatis.mapper-locations=classpath:mybatis/mapper/*.xml

#------------------------------------------------------------------

##########################  设置jsp视图返回路径   ###########################
#加载调度程序servlet的启动优先级。
#spring.mvc.servlet.load-on-startup = -1

spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp

##########################  设置静态资源映射路径   ###########################

#静态资源映射路径（一般两者需要一起更改）
#spring.mvc.static-path-pattern=/**
#spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/, classpath:/static/, classpath:/public/

#------------------------------------------------------------------
