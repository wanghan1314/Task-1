<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">
    <!-- 扫描该包路径下所有使用注解的类型 -->
    <!--<context:component-scan base-package="com.student.aop" />-->
    <context:component-scan base-package="com.jnshu.*"/>

    <!-- 配置数据库相关参数properties的属性：${url} -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!-- 数据库连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="acquireIncrement" value="3"/><!-- 如果池中数据连接不够时一次增长多少个 -->
        <property name="initialPoolSize" value="2"/>
        <property name="minPoolSize" value="1"/>
        <property name="maxPoolSize" value="100"/>
        <property name="maxStatements" value="100"/>
        <property name="maxStatementsPerConnection" value="200"/> <!-- he's important, but there's only one of him -->
    </bean>
    <!-- 配置SqlSessionFactory对象 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 扫描sql配置文件:mapper需要的xml文件 -->
        <property name="mapperLocations" value="classpath*:com/jnshu/dao/*Mapper.xml"/>
    </bean>
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.jnshu.dao"/>
    </bean>
    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--XMemcached配置-->
    <bean id="memcachedClientBuilder" class="net.rubyeye.xmemcached.XMemcachedClientBuilder">
        <constructor-arg>
            <list>
                <bean class="java.net.InetSocketAddress">
                <constructor-arg value="localhost" />
                <constructor-arg value="11211" />
                </bean>
                <!--<bean class="java.net.InetSocketAddress">-->
                    <!--<constructor-arg value=""/>-->
                    <!--<constructor-arg value="11211"/>-->
                <!--</bean>-->
            </list>
        </constructor-arg>
        <!--<constructor-arg>-->
        <!--<list>-->
        <!--<value>1</value>-->
        <!--<value>1</value>-->
        <!--</list>-->
        <!--</constructor-arg>-->
        <property name="connectionPoolSize" value="50"/>
        <property name="commandFactory">
            <bean class="net.rubyeye.xmemcached.command.BinaryCommandFactory"/>
        </property>
        <!--        <property name="sessionLocator">
                    <bean class="net.rubyeye.xmemcached.impl.KetamaMemcachedSessionLocator"/>
                </property>-->
        <property name="transcoder">
            <bean class="net.rubyeye.xmemcached.transcoders.SerializingTranscoder"/>
        </property>
    </bean>

    <!-- Use factory bean to build memcached client -->
    <bean id="memcachedClient"
          factory-bean="memcachedClientBuilder"
          factory-method="build"
          destroy-method="shutdown">
    </bean>
</beans>
