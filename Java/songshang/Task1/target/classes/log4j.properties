#配置根Log（Global logging configuration）
log4j.rootLogger=info,Console,stdout  
#   off     最高等级，用于关闭所有日志记录。
#   fatal   指出每个严重的错误事件将会导致应用程序的退出。
#   error   指出虽然发生错误事件，但仍然不影响系统的继续运行。
#   warm    表明会出现潜在的错误情形。
#   info    一般和在粗粒度级别上，强调应用程序的运行全程。
#   debug   一般用于细粒度级别上，对调试应用程序非常有帮助。
#   all     最低等级，用于打开所有日志记录。

#Log4j只建议使用4个级别，优先级从高到低分别是:error、warn、info、debug

#指定特定包的输出特定的级别，如下所示
#log4j.logger.org.springframework=DEBUG
log4j.logger.com.fml=INFO

#输出到控制台
#ConsoleAppender选项属性
# -Threshold = DEBUG:指定日志消息的输出最低层次
# -ImmediateFlush = TRUE:默认值是true,所有的消息都会被立即输出
# -Target = System.err:默认值System.out,输出到控制台(err为红色,out为黑色)
log4j.appender.Console=org.apache.log4j.ConsoleAppender
log4j.appender.Console.layout=org.apache.log4j.PatternLayout
log4j.appender.Console.layout.ConversionPattern=[%p] %d(%r) --> [%t] %l: %n %m %n              
log4j.appender.Console.Threshold=DEBUG   
log4j.appender.Console.ImmediateFlush=TRUE   

#每天产生一个日志文件
log4j.appender.stdout=org.apache.log4j.DailyRollingFileAppender
log4j.appender.stdout.File=$(Task1.root)/logs/log4j.log
log4j.appender.stdout.Append=true
log4j.appender.stdout.ImmediateFlush=true
log4j.appender.stdout.DatePattern='.'yyyy-MM-dd
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=[%p] %d(%r) --> [%t] %l: %n %m %n      


