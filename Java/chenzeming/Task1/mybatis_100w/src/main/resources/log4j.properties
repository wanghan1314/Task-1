
# 指定输出目的地stdout和file
#在开发环境下日志级别要设置为debug，生产环境下设置成info或errr
log4j.rootLogger=debug, stdout,D,E

# 指定输出目的地stdout为输出到控制台
log4j.appender.stdout=org.apache.log4j.ConsoleAppender   
# 指定stdout的日志消息的输出最低层次
#log4j.appender.stdout.Threshold=ERROR
# 指定stdoutr输出控制台,默认情况下是：System.out
#log4j.appender.stdout.Target=System.err
# 指定stdoutr的布局
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout   
# 指定stdoutr的布局的输出格式
log4j.appender.stdout.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n  \
  



  ### 输出DEBUG 级别以上的日志到=C://logs/error.log ###
log4j.appender.D = org.apache.log4j.DailyRollingFileAppender
log4j.appender.D.File = C://logs/log.log
log4j.appender.D.Append = true
log4j.appender.D.Threshold = DEBUG 
log4j.appender.D.layout = org.apache.log4j.PatternLayout
log4j.appender.D.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n

### 输出ERROR 级别以上的日志到=C://logs/error.log ###
log4j.appender.E = org.apache.log4j.DailyRollingFileAppender
log4j.appender.E.File =C://logs/error.log 
log4j.appender.E.Append = true
log4j.appender.E.Threshold = ERROR 
log4j.appender.E.layout = org.apache.log4j.PatternLayout
log4j.appender.E.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n  