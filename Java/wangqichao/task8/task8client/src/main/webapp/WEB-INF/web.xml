<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
          http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0">


    <!--配置listener，在启动Web容器的时候加载Spring的配置，单独使用springmvc时不需要!第二个加载-->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <!--welcome pages,此文件必须直接在webapp文件下-->
    <welcome-file-list>
        <welcome-file>login.jsp</welcome-file>
    </welcome-file-list>
    <!--设置使其可以访问jpg文件格式-->
    <!--<servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.jpg</url-pattern>
    </servlet-mapping>-->
    <!-- Spring配置文件 ,上下文参数：声明应用范围内的初始化参数，最先加载的-->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:applicationContext.xml</param-value>
    </context-param>

    <!--配置DispatcherServlet,添加对springMVC的支持 ，第四个加载，servlet其中的拦截器第五个加载-->
    <servlet>
        <!--servlet名称-->
        <servlet-name>springMVC</servlet-name>
        <!--servlet类全路径-->
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <!--Resources标注的文件夹下需要新建一个spring文件夹-->
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring/spring-mvc.xml</param-value>
        </init-param>
        <!--指定当Web应用启动时，装载Servlet的次序-->
        <load-on-startup>1</load-on-startup>
        <async-supported>true</async-supported>
    </servlet>
    <servlet-mapping>
        <!--servlet名称-->
        <servlet-name>springMVC</servlet-name>
        <!--映射路径-->
        <url-pattern>/</url-pattern>
    </servlet-mapping>


    <!--过滤器配置，可处理POST中文乱码的问题-->
    <!--<filter>指定一个过滤器。第三个加载-->
    <filter>
        <!--<filter-name>用于为过滤器指定一个名字，该元素的内容不能为空。-->
        <filter-name>encodingFilter</filter-name>
        <!--<filter-class>元素用于指定过滤器的完整的限定类名。-->
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <!--<init-param>元素用于为过滤器指定初始化参数，它的子元素-->
        <init-param>
            <!--<param-name>指定参数的名字，-->
            <param-name>encoding</param-name>
            <!--<param-value>指定参数的值。 在过滤器中，可以使用FilterConfig接口对象来访问初始化参数。-->
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <!--true：无论request是否指定了字符集，都是用encoding；false：如果request已指定一个字符集，则不使用encoding-->
            <param-value>true</param-value>
        </init-param>
    </filter>
    <!--<filter-mapping>元素用于设置一个 Filter 所负责拦截的资源。一个Filter拦截的资源可通过两种方式来指定：Servlet 名称和资源访问的请求路径-->
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <!--<url-pattern>设置 filter 所拦截的请求路径(过滤器关联的URL样式)-->
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!--<filter>-->
        <!--<filter-name>PreventLinkFilter</filter-name>-->
        <!--<filter-class>com.task.Filter.PreventLinkFilter</filter-class>-->
    <!--</filter>-->
    <!--<filter-mapping>-->
        <!--<filter-name>PreventLinkFilter</filter-name>-->
        <!--&lt;!&ndash;<url-pattern>设置 filter 所拦截的请求路径(过滤器关联的URL样式)&ndash;&gt;-->
        <!--<url-pattern>/*</url-pattern>-->
    <!--</filter-mapping>-->
    <!-- 配置可以把POST 请求转换为 PUT、DELETE 请求的 filter -->
    <filter>
        <filter-name>HiddenHttpMethodFilter</filter-name>
        <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>HiddenHttpMethodFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
<!--配置此信息方便在jsp页面中寻找到tld文件-->
    <jsp-config>
        <taglib>
            <taglib-uri>/tags</taglib-uri>
            <taglib-location>/WEB-INF/tld/dateTag.tld</taglib-location>
        </taglib>
    </jsp-config>
<!--设置session默认过期时间-->
    <session-config>
        <session-timeout>60</session-timeout>      <!-- 单位：分钟 -->
    </session-config>

</web-app>