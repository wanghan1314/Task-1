<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"
       default-autowire="byName">
    <!--<context:component-scan base-package="com.jnshu.tools" />-->
    <context:property-placeholder location="classpath:redis.properties" ignore-unresolvable="true"/>
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig"
          p:maxIdle="${redis.maxIdle}"
          p:minEvictableIdleTimeMillis="${redis.minEvictableIdleTimeMillis}"
          p:numTestsPerEvictionRun="${redis.numTestsPerEvictionRun}"
          p:timeBetweenEvictionRunsMillis="${redis.timeBetweenEvictionRunsMillis}"
          p:maxTotal="${redis.maxActive}"
    />
    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:host-name="${redis.host}"
          p:port="${redis.port}"
          p:usePool="${redis.usePool}"
          p:timeout="${redis.timeout}"
          p:pool-config-ref="jedisPoolConfig"/>

    <!-- redis 序列化策略 ，手动指定 key 采用String序列化策略 -->
    <bean id="stringSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"/>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="keySerializer" ref="stringSerializer"/>
        <!-- 开启事务，可以通过transcational注解控制 -->
        <property name="enableTransactionSupport" value="true"/>
    </bean>

</beans>