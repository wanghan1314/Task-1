<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jnshu.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.jnshu.model.User" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="user_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="login_time" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="creat_name" jdbcType="CHAR" javaType="java.lang.String" />
      <arg column="creat_time" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="update_name" jdbcType="CHAR" javaType="java.lang.String" />
      <arg column="update_time" jdbcType="BIGINT" javaType="java.lang.Long" />
    </constructor>
  </resultMap>

  <sql id="Base_Column_List" >
    id, user_name, password, login_time, creat_name, creat_time, update_name, update_time
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.jnshu.model.User" >
    insert into user (id, user_name, password, 
      login_time, creat_name, creat_time, 
      update_name, update_time)
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{loginTime,jdbcType=BIGINT}, #{creatName,jdbcType=CHAR}, #{creatTime,jdbcType=BIGINT}, 
      #{updateName,jdbcType=CHAR}, #{updateTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.jnshu.model.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="loginTime != null" >
        login_time,
      </if>
      <if test="creatName != null" >
        creat_name,
      </if>
      <if test="creatTime != null" >
        creat_time,
      </if>
      <if test="updateName != null" >
        update_name,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null" >
        #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="creatName != null" >
        #{creatName,jdbcType=CHAR},
      </if>
      <if test="creatTime != null" >
        #{creatTime,jdbcType=BIGINT},
      </if>
      <if test="updateName != null" >
        #{updateName,jdbcType=CHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>

  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.loginTime != null" >
        login_time = #{record.loginTime,jdbcType=BIGINT},
      </if>
      <if test="record.creatName != null" >
        creat_name = #{record.creatName,jdbcType=CHAR},
      </if>
      <if test="record.creatTime != null" >
        creat_time = #{record.creatTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateName != null" >
        update_name = #{record.updateName,jdbcType=CHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set id = #{record.id,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      login_time = #{record.loginTime,jdbcType=BIGINT},
      creat_name = #{record.creatName,jdbcType=CHAR},
      creat_time = #{record.creatTime,jdbcType=BIGINT},
      update_name = #{record.updateName,jdbcType=CHAR},
      update_time = #{record.updateTime,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jnshu.model.User" >
    update user
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null" >
        login_time = #{loginTime,jdbcType=BIGINT},
      </if>
      <if test="creatName != null" >
        creat_name = #{creatName,jdbcType=CHAR},
      </if>
      <if test="creatTime != null" >
        creat_time = #{creatTime,jdbcType=BIGINT},
      </if>
      <if test="updateName != null" >
        update_name = #{updateName,jdbcType=CHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jnshu.model.User" >
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      login_time = #{loginTime,jdbcType=BIGINT},
      creat_name = #{creatName,jdbcType=CHAR},
      creat_time = #{creatTime,jdbcType=BIGINT},
      update_name = #{updateName,jdbcType=CHAR},
      update_time = #{updateTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>