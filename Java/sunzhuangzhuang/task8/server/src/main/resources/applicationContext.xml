<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-3.1.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="spring"/>
    <context:component-scan base-package="utils"/>
    <context:property-placeholder location="classpath:redis.properties" ignore-unresolvable="true"/>


    <bean class="org.springframework.remoting.rmi.RmiServiceExporter">
        <property name="serviceName" value="occupationRMI"/>
        <property name="service" ref="occupationService"/>
        <property name="serviceInterface" value="spring.service.IoccupationService"/>
        <property name="registryPort" value="9999"/>
        <property name="servicePort" value="9999"/>
    </bean>
    <bean class="org.springframework.remoting.rmi.RmiServiceExporter">
        <property name="serviceName" value="studentRMI"/>
        <property name="service" ref="studentService"/>
        <property name="serviceInterface" value="spring.service.IstudentService"/>
        <property name="registryPort" value="9999"/>
        <property name="servicePort" value="9999"/>
    </bean>
    <bean class="org.springframework.remoting.rmi.RmiServiceExporter">
        <property name="serviceName" value="userRMI"/>
        <property name="service" ref="userService"/>
        <property name="serviceInterface" value="spring.service.IuserService"/>
        <property name="registryPort" value="9999"/>
        <property name="servicePort" value="9999"/>
    </bean>


    <!--mybatis数据库配置-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="spring.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
        <property name="username" value="root"/>
        <property name="password" value="root"/>
        <property name="url" value="jdbc:mysql://106.14.220.166:3306/spring?serverTimezone=GMT%2B8"/>
    </bean>
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations">
            <array>
                <value>classpath:StudentDaoMapper.xml</value>
                <value>classpath:OccupationMapper.xml</value>
                <value>classpath:UserMapper.xml</value>
            </array>
        </property>
    </bean>

    <!--jedis配置-->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.maxIdle}"/>
        <property name="maxWaitMillis" value="${redis.maxWait}"/>
        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>
    </bean>
    <!--redis服务器中心-->
    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="poolConfig" ref="poolConfig"/>
        <property name="port" value="${redis.port}"/>
        <property name="hostName" value="${redis.host}"/>
        <property name="password" value="${redis.password}"/>
        <property name="timeout" value="${redis.timeout}"/>
    </bean>
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
        </property>
    </bean>

</beans>