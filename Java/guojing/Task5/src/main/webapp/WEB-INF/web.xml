<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
         http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         version="2.5">

  <display-name>Archetype Created Web Application</display-name>


  <!--配置字符过滤器-->
  <filter>
    <filter-name>characterEncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>characterEncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <!--添加spring容器监听器-->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:ApplicationContext.xml</param-value>
  </context-param>
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>


  <!--监听登录人数的监听器-->
  <listener>
    <listener-class>com.listener.LoginListener</listener-class>
  </listener>



  <!-- hiddenHttpMethodFilter 可以把把post请求转船成put delete -->


  <filter>
    <filter-name>hiddenHttpMethodFilter</filter-name>
    <!--这个是put方式的拦截，只有使用postman测试接口的时候需要用到-->
    <!--<filter-class>org.springframework.web.filter.HttpPutFormContentFilter</filter-class>-->
    <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
  </filter>
  <!--filter-mapping元素的name必须对应filter元素声明的过滤器的名称。相同元素的加载是按照接待节点顺序加载的-->
  <filter-mapping>
    <filter-name>hiddenHttpMethodFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>






  <!--MVC前端控制器-->
  <servlet>
    <servlet-name>springmvc</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!-- 这里默认找 /WEB-INF/[servlet的名称]-servlet.xml，我这里设置了 -->
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:SpringMVC.xml</param-value>
    </init-param>
    <!--1表示web容器启动时，servlet的优先级，这里的servlet就是指DispatcherServlet-->
    <load-on-startup>1</load-on-startup>
  </servlet>


  <servlet-mapping>
    <servlet-name>springmvc</servlet-name>
    <!-- 1. /* 拦截所有 jsp js png .css 真的全拦截 建议不使用
    2. *.action *.do 拦截以do action结尾的请求 肯定能使用 ERP
    3. / 拦截所有 （不包括jsp) (包含.js .png.css) 强烈建议使用 -->
    <url-pattern>/</url-pattern>
  </servlet-mapping>


  <!-- 监听登录人数；配置servlet -->
  <servlet>
    <servlet-name>LoginServlet</servlet-name>
    <servlet-class>com.listener.LoginServlet</servlet-class>
  </servlet>
  <servlet>
    <servlet-name>ExitServlet</servlet-name>
    <servlet-class>com.listener.ExitServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>LoginServlet</servlet-name>
    <url-pattern>/login</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>ExitServlet</servlet-name>
    <url-pattern>/exit</url-pattern>
  </servlet-mapping>



  <!--加载自定义tag标签-->
  <jsp-config>
    <taglib>
      <taglib-uri>/tags</taglib-uri>
      <taglib-location>/WEB-INF/dateTag.tld</taglib-location>
    </taglib>
  </jsp-config>


</web-app>
