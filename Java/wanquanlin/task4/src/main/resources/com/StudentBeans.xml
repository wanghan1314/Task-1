<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <context:annotation-config />

    <!--<mvc:annotation-driven/>-->
    <context:component-scan base-package="com"/>
    <context:property-placeholder location="classpath:db.properties"/>
    <!--配置druid连接池-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close" >
        <property name="username" value="${jdbc.username}"/>
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
    <!--以下是给mybatis的配置,数据库对话工厂,mapper映射-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 指定数据源 -->
        <property name="dataSource" ref="dataSource" />
        <!-- 指定需要别名的类所在的包名 ，或者在mybatis中配置-->
        <!--<property name="typeAliasesPackage" value="com.DAO"/>-->
        <!-- 扫描所有xml文件，或者在mybatis中配置 -->
        <property name="mapperLocations" value="classpath:com/DAO/*.xml"/>
    </bean>
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.DAO" />
    </bean>
    <context:component-scan base-package="com"/>
    <aop:aspectj-autoproxy/>



<!--    <bean name="TimeHandlerAfter" class="com.AOP.TimeHandler"/>
   <aop:config>
       <aop:aspect id="time" ref="TimeHandlerAfter">
           <aop:pointcut id="addAllMethod" expression="execution(* com.controller.SpringController.*(..))"/>
       </aop:aspect>
   </aop:config>-->

</beans>

