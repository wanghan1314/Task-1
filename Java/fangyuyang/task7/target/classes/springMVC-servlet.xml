<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd ">

    <!-- 会自动注册RequestMappingHandlerMapping与RequestMappingHandlerAdapter两个Bean,
    这是Spring MVC为@Controller分发请求所必需的 使用该注解后的spring-mvc.xml:
     spring 可以自动去扫描 base-package下面的包或子包下面的Java文件，如果扫描到有Spring的相关
    注解的类，则把这些类注册为Spring的bean -->
    <mvc:annotation-driven />
    <mvc:default-servlet-handler />

        <!-- 多个拦截器，顺序执行 -->
        <!--<mvc:interceptor>-->
            <!-- /** 表示所有的url，包括子url路径 -->
            <!--<mvc:mapping path="/**"/>-->
            <!--<bean class="cn.labelnet.ssm.filter.HanderInterceptor1"></bean>-->
        <!--</mvc:interceptor>-->
        <!-- 配置登陆拦截器 -->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/login"/>
            <mvc:mapping path="/t11"/>
            <bean class="com.fangyuyang.subsidiary.LoginInterceptor"/>
        </mvc:interceptor>

    </mvc:interceptors>
    <mvc:annotation-driven>
        <!-- 消息转换器,解决responseBody返回中外乱码问题 -->
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes" value="text/plain;charset=UTF-8" />
            </bean>
        </mvc:message-converters>

    </mvc:annotation-driven>
    <bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <property name="definitions">
            <list>
                <value>WEB-INF/tiles/tiles-definitions.xml</value>
            </list>
        </property>
    </bean>
    <bean id="tilesViewResolver" class="org.springframework.web.servlet.view.tiles3.TilesViewResolver"
          p:viewClass="org.springframework.web.servlet.view.tiles3.TilesView"
          p:order="1"/>
    <!--<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
        <!--<property name="prefix" value="/WEB-INF/views/layout/" />-->
        <!--<property name="suffix" value=".jsp" />-->
    <!--</bean>-->
    <!-- 注解扫描包 -->
    <!--控制器的扫描必须在spring-mvc.xml中，否则web.xml中的DispatcherServlet拦截器将无法访问到相应的控制器-->
    <context:component-scan base-package="com.fangyuyang.controller"/>
    <!-- springMVC最常用的视图解析器-->
    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver">

        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp"/>
        <property name="order" value="10"/>
        <!--设置优先级，一般设为10最小，原因自己查-->
    </bean>
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 上传文件大小上限，单位为字节（10MB） -->
        <property name="maxUploadSize">
            <value>10485760</value>
        </property>
        <!-- 请求的编码格式，必须和jSP的pageEncoding属性一致，以便正确读取表单的内容，默认为ISO-8859-1 -->
        <property name="defaultEncoding">
            <value>UTF-8</value>
        </property>
    </bean>

</beans>