<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fangyuyang.dao.LearnerMapper" >
  <resultMap id="BaseResultMap" type="com.fangyuyang.model.Learner" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="qq" property="qq" jdbcType="INTEGER" />
    <result column="course" property="course" jdbcType="VARCHAR" />
    <result column="from_where" property="fromWhere" jdbcType="VARCHAR" />
    <result column="school" property="school" jdbcType="VARCHAR" />
    <result column="old_brother" property="oldBrother" jdbcType="VARCHAR" />
    <result column="target" property="target" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="INTEGER" />
    <result column="picture" property="picture" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, qq, course, from_where, school, old_brother, target, email, mobile, picture, 
    password
  </sql>
  <select id="countAll" resultType="int"  >
    select count(id) from learner
  </select>
  <select id="selectByName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from learner
    where name = #{name}
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from learner
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from learner
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fangyuyang.model.Learner" >
    insert into learner (id, name, qq, 
      course, from_where, school, 
      old_brother, target, email, 
      mobile, picture, password
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{qq,jdbcType=INTEGER}, 
      #{course,jdbcType=VARCHAR}, #{fromWhere,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR}, 
      #{oldBrother,jdbcType=VARCHAR}, #{target,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=INTEGER}, #{picture,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fangyuyang.model.Learner" >
    insert into learner
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="qq != null" >
        qq,
      </if>
      <if test="course != null" >
        course,
      </if>
      <if test="fromWhere != null" >
        from_where,
      </if>
      <if test="school != null" >
        school,
      </if>
      <if test="oldBrother != null" >
        old_brother,
      </if>
      <if test="target != null" >
        target,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="picture != null" >
        picture,
      </if>
      <if test="password != null" >
        password,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        #{qq,jdbcType=INTEGER},
      </if>
      <if test="course != null" >
        #{course,jdbcType=VARCHAR},
      </if>
      <if test="fromWhere != null" >
        #{fromWhere,jdbcType=VARCHAR},
      </if>
      <if test="school != null" >
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="oldBrother != null" >
        #{oldBrother,jdbcType=VARCHAR},
      </if>
      <if test="target != null" >
        #{target,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=INTEGER},
      </if>
      <if test="picture != null" >
        #{picture,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fangyuyang.model.Learner" >
    update learner
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        qq = #{qq,jdbcType=INTEGER},
      </if>
      <if test="course != null" >
        course = #{course,jdbcType=VARCHAR},
      </if>
      <if test="fromWhere != null" >
        from_where = #{fromWhere,jdbcType=VARCHAR},
      </if>
      <if test="school != null" >
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="oldBrother != null" >
        old_brother = #{oldBrother,jdbcType=VARCHAR},
      </if>
      <if test="target != null" >
        target = #{target,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=INTEGER},
      </if>
      <if test="picture != null" >
        picture = #{picture,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fangyuyang.model.Learner" >
    update learner
    set name = #{name,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=INTEGER},
      course = #{course,jdbcType=VARCHAR},
      from_where = #{fromWhere,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      old_brother = #{oldBrother,jdbcType=VARCHAR},
      target = #{target,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=INTEGER},
      picture = #{picture,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>